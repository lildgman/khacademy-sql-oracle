-- 1. 계열 정보를 저장할 카테고리 테이블을 만들려고 한다.
CREATE TABLE TB_CATEGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

-- 2. 과목 구분을 저장할 테이블을 만들려고 한다. 
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

-- 3. TB_CATAGORY 테이블의 NAME 컬럼에 PRIMARY KEY를 생성하세요
ALTER TABLE TB_CATEGORY
ADD PRIMARY KEY (NAME);

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TB_CATEGORY';

-- 4. TB_CLASS_TYPE 테이블의 NAME 컬럼에 NULL값이 들어가지 않도록 속성을 변경하시오.
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME NOT NULL;

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TB_CLASS_TYPE';

-- 5. 두 테이블에서 컬럼 명이 NO인 것은 기존 타입을 유지하면서 크기는 10으로,
-- 컬럼명이 NAME인 것은 마찬가지로 기존 타입을 유지하면서 크기를 20으로 변경
ALTER TABLE TB_CATEGORY
    MODIFY NAME VARCHAR2(20);
    
ALTER TABLE TB_CLASS_TYPE
    MODIFY NO VARCHAR2(10)
    MODIFY NAME VARCHAR2(20);    

-- 6. 두 테이블의 NO 컬럼과 NAME 컬럼의 이름을 각각 TB_를 제외한 테이블 이름이 앞에 붙은 형태로 변경
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE 
RENAME COLUMN NAME TO CLASS_TYPE_NAME;

ALTER TABLE TB_CLASS_TYPE 
RENAME COLUMN NO TO CLASS_TYPE_NO;

-- 7. TB_CATAGORY 테이블과 TB_CLASS_TYPE 테이블의 PRIMARY KEY 이름을 변경하세요
ALTER TABLE TB_CATEGORY
DROP CONSTRAINT SYS_C007168;

ALTER TABLE TB_CATEGORY
ADD CONSTRAINT PK_CATEGORY_NAME PRIMARY KEY(CATEGORY_NAME);

ALTER TABLE TB_CLASS_TYPE
DROP CONSTRAINT SYS_C007167;
ALTER TABLE TB_CLASS_TYPE
ADD CONSTRAINT PK_CLASS_TYPE_NAME PRIMARY KEY(CLASS_TYPE_NAME);

--8. INSERT문
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT;
SELECT * FROM TB_CATEGORY;

--9 TB_DEPARTMENT의 CATEGORY 컬럼이 TB_CATEGORY 테이블의 CATEGORY_NAME 컬럼을
-- 부모값으로 참조하도록 FOREIGN KEY를 지정하시오,
-- 이때 KEY 이름은 FK_테이블이름_컬럼이름으로 지정
CREATE TABLE TB_DEPARTMENT(
    CATEGORY VARCHAR(20)
);

ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

