-- 10.
CREATE VIEW VW_STUDENT_STATUS
AS (SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT 
);

-- 11.
CREATE VIEW VW_MEETING
AS (
    SELECT STUDENT_NAME,DEPARTMENT_NAME,PROFESSOR_NAME
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
);
SELECT * FROM VW_MEETING;

-- 12.
CREATE VIEW VW_STUDENTCOUNT
AS (
    SELECT DEPARTMENT_NAME, COUNT(*) AS STUDENT_COUNT
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME
);
SELECT * FROM VW_STUDENTCOUNT;

-- 13.
SELECT STUDENT_NAME
FROM VW_STUDENT_STATUS
WHERE STUDENT_NO = 'A213046';

UPDATE VW_STUDENT_STATUS
SET STUDENT_NAME = '오동건'
WHERE STUDENT_NO = 'A213046';
SELECT * FROM VW_STUDENT_STATUS;

-- 14.
CREATE OR REPLACE VIEW VW_STUDENT_STATUS
AS (SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT 
)
WITH READ ONLY;

UPDATE VW_STUDENT_STATUS
SET STUDENT_NAME = '오동건2'
WHERE STUDENT_NO = 'A213046';

-- 15.
SELECT CLASS_NO, CLASS_NAME
FROM TB_GRADE
JOIN TB_CLASS USING (CLASS_NO);

SELECT CLASS_NO, CLASS_NAME, COUNT(*) AS 누적수강생수
FROM (
    SELECT CLASS_NO, CLASS_NAME, TERM_NO
    FROM TB_GRADE
    JOIN TB_CLASS USING (CLASS_NO)
    WHERE TERM_NO >= 200501
    ORDER BY TERM_NO
)
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 누적수강생수 DESC;

SELECT *
FROM (
    SELECT CLASS_NO, CLASS_NAME, COUNT(*) AS 누적수강생수
    FROM (
        SELECT CLASS_NO, CLASS_NAME, TERM_NO
        FROM TB_GRADE
        JOIN TB_CLASS USING (CLASS_NO)
        WHERE TERM_NO >= 200501
        ORDER BY TERM_NO
    )
    GROUP BY CLASS_NO, CLASS_NAME
    ORDER BY 누적수강생수 DESC)
WHERE ROWNUM <= 3;

